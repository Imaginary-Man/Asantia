<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mob_wurm_walk</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parent_interact</parentName>
  <maskName>spr_trufflin_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///enemy init
hp=8
mhp=8
dmg=1
sight_radius=300
attack_range=15
attack_timer=30
mspeed=0.5
level=3
xp=2
agressive=false
walkrange=100
///sprites
spr_die=boss_wurm_walk
spr_idle=boss_wurm_walk
spr_attack=boss_wurm_walk
spr_walk=boss_wurm_walk
idle_image_speed=0.02
walk_image_speed=0.5

///normal init
set_random=true
type="enemy"
select=false
state=0
random_x=x
random_y=y
start_x=x
start_y=y
image_speed=idle_image_speed
target=obj_player
attacked=false
agro=obj_player
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///exp
global.xp+=xp
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state=0
state=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state=1
state=1
set_random=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///walk back to start if to far
if distance_to_point(start_x,start_y)&gt;300
{
 state=4
}

///make sure not to have a walk destination out of the room
if random_x&gt;room_width  {random_x=random_range(x-walkrange,x+walkrange)}
if random_x&lt;0           {random_x=random_range(x-walkrange,x+walkrange)}
if random_y&lt;0           {random_y=random_range(y-walkrange,y+walkrange)}
if random_y&gt;room_height {random_y=random_range(y-walkrange,y+walkrange)}


   
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///states
switch (state)
{
 case 0://idle
 {
  alarm[1]=-1
  if alarm[0]=-1 {alarm[0]=floor(random_range(50,200))}//walk timer
  sprite_index=spr_idle
  image_speed=idle_image_speed
  if set_random=true
  {
   random_x=random_range(x-walkrange,x+walkrange)
   random_y=random_range(y-walkrange,y+walkrange)
   set_random=false
  }
  break;
 }
 case 1://walk
 {
  alarm[0]=-1
  sprite_index=spr_walk
  image_speed=walk_image_speed
  distance=distance_to_point(random_x,random_y)
  mp_potential_step(random_x,random_y,min(mspeed,distance),false)
  //stop walking
  if distance&lt;=5
  {
   if alarm[1]=-1 {alarm[1]=3}
  }  
  ///image
  if x&lt;random_x
  {
   image_xscale=-1
  }
  else
  {
   image_xscale=1
  }
  break;
 }
 case 2://follow
 {
 alarm[0]=-1
 alarm[1]=-1
 if sprite_index!=spr_walk
 {
  sprite_index=spr_walk
  image_speed=walk_image_speed
 }
 if distance_to_point(target.x,target.y+7)&lt;attack_range
 {
  if alarm[3]=-1 {state=3}
 }
  else
 {
  distance=point_distance(x,y,target.x,target.y)
  mp_potential_step(target.x,target.y+7,min(mspeed,distance),false)
 }
  if x&lt;target.x
  {
   image_xscale=-1
  }
  else
  {
   image_xscale=1
  }  
 break;
 }
 case 3://attack
 {
  if sprite_index!=spr_attack
  {
   sprite_index=spr_attack
   image_index=0
   image_speed=1
  }
  if (image_index == (image_number-1))
  {
   global.hp-=dmg
   state=2
   alarm[3]=attack_timer
  }
  if x&lt;target.x
  {
   image_xscale=-1
  }
  else
  {
   image_xscale=1
  } 
 break;
 }
  case 4://walk back
 {
  hp=mhp
  attacked=false
  alarm[0]=-1
  alarm[1]=-1
  sprite_index=spr_walk
  image_speed=walk_image_speed
  distancestart=distance_to_point(start_x,start_y)
  mp_potential_step(start_x,start_y,min(mspeed,distancestart),false)
  //stop walking
  if distancestart&lt;=10
  {
   state=0
  }  
  ///image
  if x&lt;start_x
  {
   image_xscale=-1
  }
  else
  {
   image_xscale=1
  }
  break;
 }
 case 5://dying
 {
 if sprite_index!=spr_die
 {
  attacked=false
  sprite_index=spr_die
  image_index=0
  image_speed=1
  type="dead"
 }
 if (image_index == (image_number-1))
 {
  image_speed=0
  fade_out()
 }
 break;
 }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///agro
if agressive=true
{
 if distance_to_point(obj_player.x,obj_player.y)&lt;sight_radius/2
 {
  if state=0 or state=1
  {
   state=2
  }
 }
///
 if distance_to_point(target.x,target.y)&gt;sight_radius
 {
  if state!=0 or state!=1
  {
   state=0
   attacked=false
  }
 }
}

if state=0 or state=1
{
 if attacked=true
 {
  state=2
  target=agro
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///depth
depth=y*-1

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///dying
if hp&lt;=0 and state!=5
{
 state=5
 hp=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move_outside
if instance_place(x,y,all)
{
 move_outside_solid(random(360),1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
if select=true
{
 draw_sprite_ext(sprite_index,image_index,x,y,1.1,1.1,image_angle,c_red,0.8)
}

draw_self()

///testing
/*
draw_set_color(c_white)
draw_text(x,y+10,state)
draw_line(x,y,random_x,random_y)
draw_ellipse(random_x-3,random_y-1,random_x+3,random_y+1,1)
draw_set_color(c_red)
draw_line(x,y,start_x,start_y)
draw_ellipse(start_x-3,start_y-1,start_x+3,start_y+1,1)
draw_set_color(c_black)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///healthbar
if attacked!=0
{
 draw_bar(x-6,y-30,12,1,hp,mhp,c_red)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
