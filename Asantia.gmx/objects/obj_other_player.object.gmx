<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_player_parent</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

///player
image_speed=0
player_angle=0
player_color=c_white
player_eyes=0
movewith=0

///weapon
weapon_index=spr_none
weaponx=0
weapony=0
weapon_angle=0
weapon_xscale=1
weapon_yscale=1
weaponstate=0
shot=false


//stats
level=1
hp=10
mhp=15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sync

///player
image_index=gms_other_get(player_id,"img_index")
image_xscale=gms_other_get(player_id,"img_xscale")
image_yscale=gms_other_get(player_id,"img_yscale")
player_angle=gms_other_get(player_id,"player_angle")
player_color=gms_other_get(player_id,"playercolor")
player_eyes=gms_other_get(player_id,"player_eyes")

//stats
level=gms_other_get(player_id,"level")
hp=gms_other_get(player_id,"hp")
mhp=gms_other_get(player_id,"mhp")

//helm &amp; back
helm=gms_other_get(player_id,"helm")
back=gms_other_get(player_id,"back")
neck=gms_other_get(player_id,"neck")

///mainhand weapon
weapon_index=gms_other_get(player_id,"weapon_index")
weaponx=gms_other_get(player_id,"weaponx")
weapony=gms_other_get(player_id,"weapony")
weapon_angle=gms_other_get(player_id,"weapon_angle")
weapon_xscale=gms_other_get(player_id,"weapon_xscale")
weapon_yscale=gms_other_get(player_id,"weapon_yscale")
weaponstate=gms_other_get(player_id,"weaponstate")
shot=gms_other_get(player_id,"shot")

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movewith
 if floor(image_index)=0
 {
  movewith=0
 }
 if floor(image_index)=1
 {
  movewith=1
 }
 if floor(image_index)=2
 {
  movewith=2
 }
 if floor(image_index)=3
 {
  movewith=2
 }
 if floor(image_index)=4
 {
  movewith=1
 }
 if floor(image_index)=5
 {
  movewith=0
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw self and weapon

//sheated
if weaponstate=3 {draw_sprite_ext(weapon_index,-1,weaponx,weapony,weapon_xscale,weapon_yscale,weapon_angle,c_white,1)}
//player &amp;back
draw_sprite_ext(back,-1,x,y+movewith,image_xscale,image_yscale,image_angle+(player_angle/2),c_white,1)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle+player_angle,player_color,0.8)
///eyes
draw_sprite_ext(spr_eyes,player_eyes,x,y+movewith,image_xscale,image_yscale,image_angle+player_angle,c_white,1)
//neck
draw_sprite_ext(neck,-1,x,y+movewith,image_xscale,image_yscale,image_angle+player_angle,c_white,1)
//helm
draw_sprite_ext(helm,-1,x,y+movewith,image_xscale,image_yscale,image_angle+player_angle,c_white,1)

//mainhand
if weaponstate!=3 
{
 if shot=false
 {
  draw_sprite_ext(weapon_index,-1,weaponx,weapony,weapon_xscale,weapon_yscale,weapon_angle,c_white,1)
 }
}

//name
if global.ui_show=true
{
 draw_name(x,y-17,c_white,c_black,1,gms_other_get(player_id,"name"),level)
 if mhp&gt;0 and hp&gt;=0 {draw_bar(x-10,y-21,20,0.5,hp,mhp,c_lime)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,6</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
